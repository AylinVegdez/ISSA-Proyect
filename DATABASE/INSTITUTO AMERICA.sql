CREATE DATABASE INSTITUTOAMERICAJFGE;
USE INSTITUTOAMERICAJFGE;
CREATE TABLE PROFESOR
(
CVEPROF INT PRIMARY KEY auto_increment,
PROF_NOMBRE VARCHAR(30) NOT NULL,
SEXO VARCHAR(1) CHECK(SEXO='M' OR SEXO='F') NOT NULL,
NOMBRE_USUARIO VARCHAR(30) NOT NULL,
PASSWORD VARCHAR(10) NOT NULL
);
CREATE TABLE MATERIA
(
CVE_MATERIA INT PRIMARY KEY auto_increment,
NOMBRE_MATERIA VARCHAR(20) NOT NULL
);
CREATE TABLE GRUPO
(
CVEGRUPO INT PRIMARY KEY auto_increment,
CVEPROF INT, FOREIGN KEY (CVEPROF) REFERENCES PROFESOR(CVEPROF)
);
CREATE TABLE ALUMNO
(
CVE_ALUM INT PRIMARY KEY auto_increment,
ALUM_CURP VARCHAR(18) NOT NULL,
ALUM_ESTADO INT DEFAULT(1) NOT NULL,
ALUM_EDAD INT NOT NULL,
ALUM_NOMBRE VARCHAR(30) NOT NULL,
ALUM_SEXO VARCHAR(1) CHECK(ALUM_SEXO='M' OR ALUM_SEXO='F') NOT NULL,
CVEGRUPO  INT NOT NULL, FOREIGN KEY(CVEGRUPO) REFERENCES GRUPO(CVEGRUPO)
);
CREATE TABLE PROMEDIOS_FINALES
(
CVE_ALUM INT, FOREIGN KEY (CVE_ALUM) REFERENCES ALUMNO(CVE_ALUM),
GRADO INT NOT NULL,
PROMEDIO_FINAL DECIMAL(4,2) CHECK(PROMEDIO_FINAL>=0 AND PROMEDIO_FINAL<=10)NOT NULL
);
select cveprof from profesor order by cveprof;

CREATE TABLE CALIF_ALUMNO
(
CALIF_TRIM_ALUM DECIMAL(4,2) CHECK(CALIF_TRIM_ALUM>=0 AND CALIF_TRIM_ALUM<=10) NOT NULL,
NUMERO_TRIMESTRE INT NOT NULL,
CVE_ALUM INT NOT NULL, FOREIGN KEY (CVE_ALUM) REFERENCES ALUMNO(CVE_ALUM) ,
CVE_MATERIA INT NOT NULL, FOREIGN KEY (CVE_MATERIA) REFERENCES MATERIA(CVE_MATERIA)
);
CREATE TABLE PROM_MATERIA_ALUMNO
(
 PROM_MAT_ALUM DECIMAL(4,2) CHECK(PROM_MAT_ALUM>=0 AND PROM_MAT_ALUM<=10) NOT NULL,
 CVE_MATERIA INT NOT NULL, FOREIGN KEY (CVE_MATERIA) REFERENCES MATERIA(CVE_MATERIA),
 CVE_ALUM INT NOT NULL, FOREIGN KEY (CVE_ALUM) REFERENCES ALUMNO(CVE_ALUM)

)
